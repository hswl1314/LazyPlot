library(tidyverse)

# 创建示例数据
A <- data.frame(
  Sample1 = c(10, 15, 20, 25),
  Sample2 = c(12, 18, 22, 28),
  Sample3 = c(14, 16, 24, 30)
)
rownames(A) <- c("Gene1", "Gene2", "Gene3", "Gene4")

# 转换数据
B <- A %>%
  t() %>%
  as.data.frame() %>%
  rownames_to_column("SampleID")

# 显示结果
print(B)

#' Convert Sample Rows to Sample Columns
#' 
#' @title Convert a gene expression matrix from row-sample to column-sample format
#' @description Transforms a data frame where samples are rows back to a format
#'     where samples are columns.
#' 
#' @param data A data frame with samples as rows and genes as columns, plus an ID column
#' @param id_col A character string specifying the name of the ID column (default: "SampleID")
#' @return A data frame with genes as rows and samples as columns
#' @export
#' @importFrom magrittr %>%
#' @importFrom tibble column_to_rownames
#' 
#' @examples
#' B <- data.frame(
#'   SampleID = c("Sample1", "Sample2", "Sample3"),
#'   Gene1 = c(10, 12, 14),
#'   Gene2 = c(15, 18, 16),
#'   Gene3 = c(20, 22, 24)
#' )
#' rowSample_to_colSample(B)
rowSample_to_colSample <- function(data, id_col = "SampleID") {
  # Input validation
  if (!is.data.frame(data)) {
    stop("Input must be a data frame")
  }
  
  if (!(id_col %in% colnames(data))) {
    stop(sprintf("Column '%s' not found in the data frame", id_col))
  }
  
  # Perform the transformation
  transformed_data <- data %>%
    column_to_rownames(id_col) %>%
    t() %>%
    as.data.frame()
  
  return(transformed_data)
}

B <- data.frame(
  SampleID = c("Sample1", "Sample2", "Sample3"),
  Gene1 = c(10, 12, 14),
  Gene2 = c(15, 18, 16),
  Gene3 = c(20, 22, 24)
)
# 使用上面的示例数据 B
result <- rowSample_to_colSample(B)
# 或者指定ID列名
# result <- rowSample_to_colSample(B, id_col = "SampleID")

# 查看结果
print(result)
# 结果应该与原始的数据框 A 相同